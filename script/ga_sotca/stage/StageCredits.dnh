#TouhouDanmakufu[Stage]
#ScriptVersion[3]
#Title["Stage 6"]
#Text["Stage 6"]
#Background["./bgStars.dnh"]
#System["./../system/System.txt"]

#include"../SoundControl.dnh"
#include "../FunctionsUtil.txt"

#include "./stgenemy/CrystalDiamond.dnh"
#include"../system/Default_ShotConst.txt"
#include"../system/Default_Effect.txt"


let bgm = ObjSound_Create();
ObjSound_Load(bgm, GetCurrentScriptDirectory() ~ "../bgm/musica6.ogg");
playMusic(bgm);
ObjSound_Play(bgm);

@Initialize
{
	SetCommonData("stage",5 );
	SetAutoDeleteObject(true);

	TStage();
	EndStage();
}

@Event{
	alternative(GetEventType())
	case(EV_PAUSE_ENTER){
		ObjSound_Stop(bgm);
	}
	case(EV_PAUSE_LEAVE){
		ObjSound_Play(bgm);	
	}
}

@MainLoop
{
	yield;
}

@Finalize
{
}


task TStage
{
	loop(6){yield;}
	DrawCredits();

	loop(900){yield;}

    //ステージ終了
	CloseStgScene();
}

task EndStage(){
	loop{
		if(GetPlayerState() == STATE_END){
		wait(900);
		CloseStgScene();
	}
		yield;
	}
	
}
function waitForZeroEnemies(){
	let arrayOfEnemies = GetAllEnemyID;
	while(length(arrayOfEnemies)>0){
		loop(5){arrayOfEnemies = GetAllEnemyID;}

		yield;
	}
	
}

function DrawCredits(){
	let count =0;

	let objStageTitle = ObjText_Create();
	ObjText_SetText(objStageTitle, "CONGRATULATIONS![r] YOU WON THE GAME![r] YOUR SCORE IS.... ");
	ObjText_SetFontType(objStageTitle,"SF Intellivised" );
	ObjText_SetFontSize(objStageTitle, 25);
	ObjText_SetFontColorTop(objStageTitle, 197, 27, 26);
	ObjText_SetFontColorBottom(objStageTitle, 31, 176, 31);
	ObjText_SetFontBorderType(objStageTitle, BORDER_FULL);
	ObjText_SetFontBorderColor(objStageTitle,255, 255, 255);
	ObjText_SetFontBorderWidth(objStageTitle, 2);
	Obj_SetRenderPriorityI(objStageTitle, 50);
	ObjRender_SetX(objStageTitle, 80);
	ObjRender_SetY(objStageTitle, 70);

	let objSubTitle = ObjText_Create();
	ObjText_SetText(objSubTitle, "Stage 1:  "~ToString(GetCommonData("scoreStg1",0 ))~"[r]"
		~"Stage 2: "~ToString(GetCommonData("scoreStg2",0 ))~"[r]"
		~"Stage 3: "~ToString(GetCommonData("scoreStg3",0 ))~"[r]"
		~"Stage 4: "~ToString(GetCommonData("scoreStg4",0 ))~"[r]"
		~"Stage 5: "~ToString(GetCommonData("scoreStg5",0 ))

		);
	ObjText_SetFontType(objSubTitle,"SF Intellivised" );
	ObjText_SetFontSize(objSubTitle, 20);
	//ObjText_SetFontBold(objTitleText, true);
	ObjText_SetFontColorTop(objSubTitle, 197, 27, 26);
	ObjText_SetFontColorBottom(objSubTitle, 31, 176, 31);
	ObjText_SetFontBorderType(objSubTitle, BORDER_FULL);
	ObjText_SetFontBorderColor(objSubTitle,255, 255, 255);
	ObjText_SetFontBorderWidth(objSubTitle, 2);
	Obj_SetRenderPriorityI(objSubTitle, 50);
	ObjRender_SetX(objSubTitle, 100);
	ObjRender_SetY(objSubTitle, 180);

	ObjRender_SetAlpha(objStageTitle, 0);
	ObjRender_SetAlpha(objSubTitle, 0);
	while(count<255){
		ObjRender_SetAlpha(objStageTitle, count);
		ObjRender_SetAlpha(objSubTitle, count);
		wait(1);
		count+=2;
	}
	wait(800);
	count =255;
	while(count>0){
		ObjRender_SetAlpha(objStageTitle, count);
		ObjRender_SetAlpha(objSubTitle, count);
		wait(5);
		count-=30;
	}
	Obj_Delete(objSubTitle);
	Obj_Delete(objStageTitle);
}

function playMusic(bgm){
	let vol = GetAreaCommonData("Options","BGM",0 );
	ObjSound_SetSoundDivision(bgm, SOUND_BGM);
    ObjSound_SetRestartEnable(bgm, true);
    ObjSound_SetLoopEnable(bgm, true);
    //ObjSound_SetLoopTime(bgm, 3, 51);
    ObjSound_SetVolumeRate(bgm, vol);
    return bgm;
}

function NewTextObj(let x, let y,let txt){
			let objText = ObjText_Create;
	        ObjText_SetText(objText, txt);
	        ObjText_SetFontSize(objText, 32); // tamanho da fonte
	        ObjText_SetFontType(objText, "Comic Sans MS"); // nome da fonte
	        ObjText_SetFontColorTop(objText, 0, 255, 0); // cor no topo das letras
	        ObjText_SetFontColorBottom(objText, 0, 0, 0); // cor na parte de baixo das letras 
	        ObjText_SetFontBorderType(objText, BORDER_FULL); // bordas no texto
	        ObjText_SetFontBorderColor(objText, 96, 96, 96); // cor da borda
	        ObjText_SetFontBorderWidth(objText, 1); // espessura da borda
	        Obj_SetRenderPriority(objText, 0.95); // render priority ("camadas")
	        ObjRender_SetPosition(objText, x, y, 0); // posição x,y,z
	        ObjText_SetHorizontalAlignment(objText, ALIGNMENT_LEFT); // alinhamento
	        ObjText_SetMaxWidth(objText, 480); // largura máxima antes da quebra de linha
			//Obj_SetVisible(objText,true);
		return objText;
}